=== git  align from remote/origin ===
git fetch origin
git reset --hard origin/master

=== push to origin/master ===
git push origin master

=== script per lo startup di openshift origin tramite docker ===
#!/bin/sh

echo "starting openshift platform"

sudo docker run -d --name "origin" \
        --privileged --pid=host --net=host \
        -v /:/rootfs:ro -v /var/run:/var/run:rw -v /sys:/sys -v /sys/fs/cgroup:/sys/fs/cgroup:rw \
        -v /var/lib/docker:/var/lib/docker:rw \
        -v /var/lib/origin/openshift.local.volumes:/var/lib/origin/openshift.local.volumes:rslave \
        openshift/origin start --public-master=https://192.168.0.100:8443

echo -n restoring firewall rules...
sudo /usr/sbin/iptables-restore /etc/sysconfig/iptables-config
echo ok
echo -n starting openshift...
sudo docker start origin >/dev/null 2>&1
echo ok

=== login ===
oc login -u system:admin -n default

=== master schedulabile ===
oadm manage-node localhost.localdomain --schedulable=true
[root@localhost origin]# oadm manage-node localhost.localdomain --schedulable=true
NAME                    STATUS    AGE       VERSION
localhost.localdomain   Ready     12m       v1.7.0+695f48a16f
[root@localhost origin]#

=== node describe ===
oc describe node localhost.localdomain

=== add role admin to devops ===
[root@localhost origin]# oc policy add-role-to-user admin devops -n default
role "admin" added: "devops"
[root@localhost origin]#

=== deploy a registry inside openshift origin (docker container) ===
oadm registry --config=/var/lib/origin/openshift.local.config/master/admin.kubeconfig --service-account=registry

[root@localhost /]# oadm registry --config=/var/lib/origin/openshift.local.config/master/admin.kubeconfig --service-account=registry
--> Creating registry registry ...
    serviceaccount "registry" created
    clusterrolebinding "registry-registry-role" created
    deploymentconfig "docker-registry" created
    service "docker-registry" created
--> Success
[root@localhost /]#
[root@localhost origin]# oadm registry --dry-run
Docker registry "docker-registry" service exists
[root@localhost origin]#

=== show registry ip ===
oc get svc

=== create a router ===
[root@localhost origin]# oc adm policy add-scc-to-user hostnetwork system:serviceaccount:default:router
[root@localhost origin]#

oadm policy add-cluster-role-to-user \
    cluster-reader \
    system:serviceaccount:default:router

oc adm router router --replicas=1 --service-account=router	

[root@localhost origin]# oc adm router --dry-run --service-account=router
Router "router" service exists
[root@localhost origin]#

=== create registry console ===
oc create -n default -f https://raw.githubusercontent.com/openshift/openshift-ansible/master/roles/openshift_hosted_templates/files/v3.7/origin/registry-console.yaml
#oc create -n default -f https://raw.githubusercontent.com/openshift/openshift-ansible/master/roles/openshift_hosted_templates/files/v1.5/origin/registry-console.yaml
[root@localhost origin]# oc create route passthrough --service registry-console --port registry-console -n default
route "registry-console" created
[root@localhost origin]#

oc new-app -n default --template=registry-console \
    -p OPENSHIFT_OAUTH_PROVIDER_URL="https://192.168.0.100:8443" \
    -p REGISTRY_HOST=$(oc get route registry-console --template='{{ .spec.host }}') \
    -p COCKPIT_KUBE_URL=$(oc get route registry-console -n default --template='https://{{ .spec.host }}')

=== set registry as insecure ===
vi /etc/sysconfig/docker
OPTIONS='--selinux-enabled --log-driver=journald --signature-verification=false --insecure-registry 172.30.236.224:5000'

=== tag & push images ===
# cluster ip del registry 
# oc get svc ==> 172.30.236.224
docker login -p sYk_d5_cZdJv5Dq-UoycUpgnvjXaF_7yZJWSh-dkGXg -u devops 172.30.236.224:5000
docker tag alex/web2py_alpine 172.30.236.224:5000/default/web2py-alpine
docker push 172.30.236.224:5000/default/web2py-alpine

=== delete all container ===
docker ps -a | tail -n+2 | awk '{ print $1 }' | xargs docker rm

=== delete all images ===
docker images | tail -n+2 | awk '{ print $3 }' | xargs docker rmi



